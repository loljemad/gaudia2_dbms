DROP DATABASE gymmanagement;
CREATE DATABASE gymmanagement;

USE gymmanagement;

CREATE TABLE client (
  client_id INT PRIMARY KEY AUTO_INCREMENT,
  fname VARCHAR(255),
  lname VARCHAR(255),
  gender ENUM('female', 'male') DEFAULT 'male',
  age INT,
  contact_add VARCHAR(255),
  email VARCHAR(255),
  password VARCHAR(255)
);

CREATE TABLE transaction_records (
  trans_id INT PRIMARY KEY AUTO_INCREMENT,
  trans_name VARCHAR(255),
  client_id INT,
  amount INT,
  datee DATE,
  CONSTRAINT FKclientID FOREIGN KEY (client_id)
    REFERENCES client(client_id)
);

CREATE TABLE reports (
  report_id INT PRIMARY KEY AUTO_INCREMENT,
  total_amount VARCHAR(255),
  datee DATE,
  client_id INT,
  trans_id INT,
  CONSTRAINT fkreportclientID FOREIGN KEY (client_id)
    REFERENCES client(client_id),
  CONSTRAINT FKtransID FOREIGN KEY (trans_id)
    REFERENCES transaction_records(trans_id)
);

CREATE TABLE trainor (
  trainor_id INT PRIMARY KEY AUTO_INCREMENT,
  trainor_name VARCHAR(255),
  salary INT,
  email VARCHAR(255),
  trainor_password VARCHAR(255)
);

CREATE TABLE membership (
  mem_id INT PRIMARY KEY AUTO_INCREMENT,
  client_id INT,
  mem_status VARCHAR(255),
  datee DATE,
  CONSTRAINT FKmemid FOREIGN KEY (client_id)
    REFERENCES client(client_id)
);

CREATE TABLE payment (
  payment_id INT PRIMARY KEY AUTO_INCREMENT,
  client_id INT,
  datee DATE,
  amount INT,
  CONSTRAINT FKpaymentid FOREIGN KEY (client_id)
    REFERENCES client(client_id)
);

CREATE TABLE sched (
  sched_id INT PRIMARY KEY AUTO_INCREMENT,
  client_id INT,
  trainor_id INT,
  sched_session VARCHAR(255),
  activity VARCHAR(255),
  datee DATE,
  time_start TIME,
  time_end TIME,
  CONSTRAINT FKschedd_client FOREIGN KEY (client_id)
    REFERENCES client(client_id),
  CONSTRAINT FKschedd_trainor FOREIGN KEY (trainor_id)
    REFERENCES trainor(trainor_id)
);




INSERT INTO client (fname, lname, gender, age, contact_add, email, password)
VALUES 
  ('yum borgor', 'Doe', 'female', 28, '123', 'jane.com', 'password1'),
  ('Jolllllyyy', 'Smith', 'male', 35, '456 E', 'john.com', 'password2'),
  ('Bob', 'thebuilder', 'male', 42, '789 ', 'bob.j.com', 'password3'),
  ('Emily', 'ketchips', 'female', 23, '321 ', 'jeeeee@gmaiol', 'password4'),
  ('Mike', 'Ty', 'male', 40, '654 ', 'm@gmail.cpm,', 'password5');


INSERT INTO payment (client_id, datee, amount)
VALUES 
(1, '2022-04-19', 50),
(2, '2022-04-18', 75),
(3, '2022-04-17', 100),
(4, '2022-04-16', 125),
(5, '2022-04-15', 150);

INSERT INTO membership (client_id, mem_status, datee) 
VALUES 
(1, 'ACTIVE', '2025-01-01'),
(2, 'INACTIVE', '2020-02-01'),
(3, 'ACTIVE', '2012-01-15'),
(4, 'INACTIVE', '203-03-01'),
(5, 'ACTIVE', '20223-02-15');

INSERT INTO trainor (trainor_name, salary, email, trainor_password) VALUES
('yum borgor', 5000, 'hakdooggggg@gmail.com', '12333'),
('Jano Doe', 6000, 'hakdooggggg@gmail.com', 'pa123'),
('booooby Johnson', 5500, 'hakdooggggg@gmail.com', '3441'),
('Sarah s', 6500, 'shakdooggggg@gmail.com', '414'),
('Mike B', 7000, 'hhakdooggggg@gmail.com', '3');


INSERT INTO transaction_records (trans_name, client_id, amount, datee)
VALUES
  ('Membership Fee', 1, 50, '2321'),
  ('Training Session', 2, 75, '312312'),
  ('Membership Fee', 3, 50, '2321'),
  ('Training Session', 4, 75, '1233-01-04'),
  ('Membership Fee', 5, 50, '2022-312231-05');
  INSERT INTO sched (client_id, trainor_id, sched_session, activity, datee, time_start, time_end)
VALUES
(1, 2, 'Morning', 'Yoga', '2023-04-20', '08:00:00', '4'),
(2, 1, 'Afternoon', 'Weight Lifting', '2023-04-20', '14:00:00', '5'),
(3, 2, 'Evening', 'Cardio', '2023-04-21', '18:00:00', '6'),
(4, 3, 'Morning', 'Boxing', '2023-04-21', '10:00:00', '2'),
(5, 1, 'Afternoon', 'Pilates', '2023-04-22', '14:00:00', '1');
INSERT INTO reports (total_amount, datee, client_id, trans_id)
VALUES
  ('100', '2022-01-01', 1, 1),
  ('200', '2022-01-02', 2, 2),
  ('300', '2022-01-03', 3, 3),
  ('400', '2022-01-04', 4, 4),
  ('500', '2022-01-05', 5, 5);






SELECT c.fname, c.lname, s.sched_session, s.activity, s.datee, s.time_start, s.time_end, t.trainor_name 
FROM sched s
INNER JOIN client c ON c.client_id = s.client_id 
INNER JOIN trainor t ON t.trainor_id = s.trainor_id;



SELECT client.fname, client.lname, 
    IFNULL(SUM(transaction_records.amount), 0) AS total_amount_to_pay, 
    IFNULL(payment.amount, 0) AS amount_paid, 
    IFNULL(membership.mem_status, 'INACTIVE') AS active_membership
FROM client
LEFT JOIN transaction_records ON client.client_id = transaction_records.client_id
LEFT JOIN payment ON client.client_id = payment.client_id
LEFT JOIN membership ON client.client_id = membership.client_id
GROUP BY client.client_id;









